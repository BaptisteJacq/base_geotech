create or replace FUNCTION GET_CODE_INSEE_CONTAIN_POINT(v_geometry SDO_GEOMETRY) RETURN CHAR
/*
Cette fonction a pour objectif de récupérer le code INSEE de la commune dans laquelle se situe un objet ponctuel.
ATTENTION : cette fonction porte sur la vue des 95 communes.
La variable v_table_name doit contenir le nom de la table contenant les objets ponctuels.
La variable v_geometry doit contenir le nom du champ géométrique de la table interrogée.
*/
    DETERMINISTIC
    As
    v_code_insee CHAR(8);
    BEGIN
        SELECT
            TRIM(b.code_insee)
            INTO v_code_insee
        FROM
            G_REFERENTIEL.MEL_COMMUNE b
        WHERE
            SDO_RELATE(v_geometry, b.geom, 'mask=INSIDE')='TRUE';
        RETURN v_code_insee;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RETURN 'error';
    END GET_CODE_INSEE_CONTAIN_POINT;

/

/*
SEQ_TA_GEOTECH_FAMILLE_OBJECTID : création de la séquence d'auto-incrémentation de la clé primaire de la table TA_GEOTECH_FAMILLE
*/

CREATE SEQUENCE SEQ_TA_GEOTECH_FAMILLE_OBJECTID START WITH 1 INCREMENT BY 1;

/

/*
TA_GEOTECH_FAMILLE : Création de la table TA_GEOTECH_FAMILLE qui contient les familles des objets liées aux études géotechniques.
*/

-- 1. La table
CREATE TABLE G_GEO.TA_GEOTECH_FAMILLE (
	"OBJECTID" NUMBER(38,0) DEFAULT G_GEO.SEQ_TA_GEOTECH_FAMILLE_OBJECTID.NEXTVAL NOT NULL,
	"VALEUR" VARCHAR2(255 BYTE)
 );

-- 2. Les commentaires
 COMMENT ON TABLE G_GEO.TA_GEOTECH_FAMILLE IS 'Table contenant les familles de libellés permettant de qualifier les objets du schéma G_GEOTECH.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_FAMILLE.OBJECTID IS 'Identifiant de chaque famille de libellés.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_FAMILLE.VALEUR IS 'Valeur de chaque famille de libellés.';

-- 3. Les contraintes
-- Contrainte de clé primaire
ALTER TABLE G_GEO.TA_GEOTECH_FAMILLE
ADD CONSTRAINT TA_GEOTECH_FAMILLE_PK
PRIMARY KEY("OBJECTID")
USING INDEX TABLESPACE G_ADT_INDX;

-- Contraintes d'unicité
ALTER TABLE G_GEO.TA_GEOTECH_FAMILLE
ADD CONSTRAINT TA_GEOTECH_FAMILLE_LIBELLE_UN
UNIQUE("VALEUR")
USING INDEX TABLESPACE G_ADT_INDX;

-- 5. Les droits de lecture, écriture, suppression
GRANT SELECT ON G_GEO.TA_GEOTECH_FAMILLE TO G_ADMIN_SIG;

/

/*
TA_GEOTECH_FAMILLE_LIBELLE : Création de la table TA_GEOTECH_FAMILLE_LIBELLE contenant les identifiant des tables TA_GEOTECH_LIBELLE et TA_GEOTECH_FAMILLE, permettant de joindre chaque libellé à sa famille de libellés.
*/

-- 1. La table
CREATE TABLE G_GEO.TA_GEOTECH_FAMILLE_LIBELLE (
	"FID_FAMILLE" NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"FID_LIBELLE" NUMBER(38,0)
 );

-- 2. Les commentaires
COMMENT ON TABLE G_GEO.TA_GEOTECH_FAMILLE_LIBELLE IS 'Table contenant les identifiant des tables TA_GEOTECH_FAMILLE_LIBELLE et TA_GEOTECH_FAMILLE, permettant de joindre chaque libellé à sa famille de libellés.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_FAMILLE_LIBELLE.FID_FAMILLE IS 'Clé étrangère vers la table TA_GEOTECH_FAMILLE permettant d''associer une famille à un ou plusieurs libellés.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_FAMILLE_LIBELLE.FID_LIBELLE IS 'Clé étrangère vers la table TA_GEOTECH_LIBELLE permettant d''associer un libellé à une ou plusieurs familles.';

-- 3. Les contraintes
-- Contrainte de clé primaire
ALTER TABLE G_GEO.TA_GEOTECH_FAMILLE_LIBELLE
ADD CONSTRAINT TA_GEOTECH_FAMILLE_LIBELLE_PK
PRIMARY KEY("FID_FAMILLE", "FID_LIBELLE")
USING INDEX TABLESPACE G_ADT_INDX;

-- 5. Les droits de lecture, écriture, suppression
GRANT SELECT ON G_GEO.TA_GEOTECH_FAMILLE_LIBELLE TO G_ADMIN_SIG;

/

/*
SEQ_TA_GEOTECH_LIBELLE_OBJECTID : création de la séquence d'auto-incrémentation de la clé primaire de la table TA_GEOTECH_LIBELLE
*/

CREATE SEQUENCE SEQ_TA_GEOTECH_LIBELLE_OBJECTID START WITH 1 INCREMENT BY 1;

/

/*
TA_GEOTECH_LIBELLE : Création de la table TA_GEOTECH_LIBELLE qui contient les libellés des objets liées aux études géotechniques.
*/

-- 1. La table
CREATE TABLE G_GEO.TA_GEOTECH_LIBELLE (
	"OBJECTID" NUMBER(38,0) DEFAULT G_GEO.SEQ_TA_GEOTECH_LIBELLE_OBJECTID.NEXTVAL NOT NULL,
	"LIBELLE_LONG" VARCHAR2(4000),
	"LIBELLE_COURT" VARCHAR2(200)
 );

-- 2. Les commentaires
COMMENT ON TABLE G_GEO.TA_GEOTECH_LIBELLE IS 'Table regroupant les libellés long qualifiant les objets de la base G_GEOTECH.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_LIBELLE.OBJECTID IS 'Identifiant de chaque famille de libellés.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_LIBELLE.LIBELLE_LONG IS 'Valeur décrivant les types d''objets répartis par famille.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_LIBELLE.LIBELLE_COURT IS 'Valeur synthétique décrivant les types d''objets répartis par famille. Cette valeur a la même utilité que celle du champ libelle_long, elle est simplement plus courte.';
-- 3. Les contraintes
-- Contrainte de clé primaire
ALTER TABLE G_GEO.TA_GEOTECH_LIBELLE
ADD CONSTRAINT TA_GEOTECH_LIBELLE_PK
PRIMARY KEY("OBJECTID")
USING INDEX TABLESPACE G_ADT_INDX;

-- Contraintes d'unicité
ALTER TABLE G_GEO.TA_GEOTECH_LIBELLE
ADD CONSTRAINT TA_GEOTECH_LIBELLE_LIBELLE_LONG_UN
UNIQUE("LIBELLE_LONG")
USING INDEX TABLESPACE G_ADT_INDX;

ALTER TABLE G_GEO.TA_GEOTECH_LIBELLE
ADD CONSTRAINT TA_GEOTECH_LIBELLE_LIBELLE_COURT_UN
UNIQUE("LIBELLE_COURT")
USING INDEX TABLESPACE G_ADT_INDX;

-- 4. Les droits de lecture, écriture, suppression
GRANT SELECT ON G_GEO.TA_GEOTECH_LIBELLE TO G_ADMIN_SIG;

/

/*
SEQ_TA_GEOTECH_SITE_OBJECTID : création de la séquence d'auto-incrémentation de la clé primaire de la table TA_GEOTECH_SITE
*/

CREATE SEQUENCE SEQ_TA_GEOTECH_SITE_OBJECTID START WITH 1 INCREMENT BY 1;

/

/*
TA_GEOTECH_SITE : Création de la table TA_GEOTECH_SITE regroupant tous les sites géotechniques.
*/

-- 1. La table
CREATE TABLE G_GEO.TA_GEOTECH_SITE (
    "OBJECTID" NUMBER(38,0) DEFAULT G_GEO.SEQ_TA_GEOTECH_SITE_OBJECTID.NEXTVAL NOT NULL,
    "GEOM" MDSYS.SDO_GEOMETRY,
    "CODE_INSEE" AS (TRIM(GET_CODE_INSEE_CONTAIN_POINT(geom))),
    "X_EPSG2154" AS (ROUND(GEOM.SDO_POINT.X,6)),
    "Y_EPSG2154" AS (ROUND(GEOM.SDO_POINT.Y,6)),
    "ADRESSE" VARCHAR2(4000)
 );

-- 2. Les commentaires
COMMENT ON TABLE G_GEO.TA_GEOTECH_SITE IS 'Table  regroupant tous les sites géotechniques.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_SITE.OBJECTID IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_SITE.GEOM IS 'Champ géométrique de type ponctuel de chaque site.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_SITE.CODE_INSEE IS 'Champ calculé, récupérant via une requête spatiale, le code INSEE de la commune d''appartenance de chaque site.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_SITE.X_EPSG2154 IS 'Champ calculé récupérant les coordonnées en X de chaque site en Lambert93/RGF-93.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_SITE.Y_EPSG2154 IS 'Champ calculé récupérant les coordonnées en Y de chaque site en Lambert93/RGF-93.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_SITE.ADRESSE IS 'Adresse de chaque site.';

-- 3. Les métadonnées spatiales
INSERT INTO USER_SDO_GEOM_METADATA(
    TABLE_NAME, 
    COLUMN_NAME, 
    DIMINFO, 
    SRID
)
VALUES(
    'TA_GEOTECH_SITE',
    'GEOM',
    SDO_DIM_ARRAY(SDO_DIM_ELEMENT('X', 594000, 964000, 0.005),SDO_DIM_ELEMENT('Y', 6987000, 7165000, 0.005)), 
    2154
);
COMMIT;

-- 3. Les contraintes
-- Contrainte de clé primaire
ALTER TABLE G_GEO.TA_GEOTECH_SITE
ADD CONSTRAINT TA_GEOTECH_SITE_PK
PRIMARY KEY("OBJECTID")
USING INDEX TABLESPACE G_ADT_INDX;

-- 4. Les index
-- Index spatial
CREATE INDEX TA_GEOTECH_SITE_SIDX
ON G_GEO.TA_GEOTECH_SITE(GEOM)
INDEXTYPE IS MDSYS.SPATIAL_INDEX_V2
PARAMETERS('sdo_indx_dims=2, layer_gtype=POINT, tablespace=G_ADT_INDX, work_tablespace=DATA_TEMP');

-- Autres index
CREATE INDEX TA_GEOTECH_SITE_CODE_INSEE_IDX ON G_GEO.TA_GEOTECH_SITE("CODE_INSEE")
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_GEOTECH_SITE_X_EPSG2154_IDX ON G_GEO.TA_GEOTECH_SITE("X_EPSG2154")
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_GEOTECH_SITE_Y_EPSG2154_IDX ON G_GEO.TA_GEOTECH_SITE("Y_EPSG2154")
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_GEOTECH_SITE_ADRESSE_IDX ON G_GEO.TA_GEOTECH_SITE("ADRESSE")
    TABLESPACE G_ADT_INDX;

-- 5. Les droits de lecture, écriture, suppression
GRANT SELECT ON G_GEO.TA_GEOTECH_SITE TO G_ADMIN_SIG;

/

/*
SEQ_TA_GEOTECH_ETUDE_OBJECTID : création de la séquence d'auto-incrémentation de la clé primaire de la table TA_GEOTECH_ETUDE
*/

CREATE SEQUENCE SEQ_TA_GEOTECH_ETUDE_OBJECTID START WITH 1 INCREMENT BY 1;

/

/*
TA_GEOTECH_ETUDE : Création de la table TA_GEOTECH_ETUDE regroupant toutes les études faites à partir de sites géotechniques.
*/

-- 1. La table
CREATE TABLE G_GEO.TA_GEOTECH_ETUDE (
	"OBJECTID" NUMBER(38,0) DEFAULT G_GEO.SEQ_TA_GEOTECH_ETUDE_OBJECTID.NEXTVAL NOT NULL,
	"ANNEE_CREATION" NUMBER(38,0),
	"DESCRIPTION" VARCHAR2(4000),
	"FID_TYPE_ETUDE" NUMBER(38,0)
 );

-- 2. Les commentaires
COMMENT ON TABLE G_GEO.TA_GEOTECH_ETUDE IS 'Table regroupant toutes les études faites à partir de sites géotechniques.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_ETUDE.OBJECTID IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_ETUDE.ANNEE_CREATION IS 'Champ contenant l''année de création de l''étude.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_ETUDE.DESCRIPTION IS 'Description de l''étude.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_ETUDE.FID_TYPE_ETUDE IS 'Clé étrangère vers la table TA_GEOTECH_libelle permettant d''associer un type à une étude.';

-- 3. Les contraintes
-- Contrainte de clé primaire
ALTER TABLE G_GEO.TA_GEOTECH_ETUDE
ADD CONSTRAINT TA_GEOTECH_ETUDE_PK
PRIMARY KEY("OBJECTID")
USING INDEX TABLESPACE G_ADT_INDX;

-- Contrainte de clé étrangère
ALTER TABLE G_GEO.TA_GEOTECH_ETUDE
ADD CONSTRAINT TA_GEOTECH_ETUDE_FID_TYPE_ETUDE_FK
FOREIGN KEY("FID_TYPE_ETUDE")
REFERENCES G_GEO.TA_GEOTECH_LIBELLE("OBJECTID");

-- 4. Les index
CREATE INDEX TA_GEOTECH_ETUDE_ANNEE_CREATION_IDX ON G_GEO.TA_GEOTECH_ETUDE("ANNEE_CREATION")
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_GEOTECH_ETUDE_FID_TYPE_ETUDE_IDX ON G_GEO.TA_GEOTECH_ETUDE("FID_TYPE_ETUDE")
    TABLESPACE G_ADT_INDX;

-- 5. Les droits de lecture, écriture, suppression
GRANT SELECT ON G_GEO.TA_GEOTECH_ETUDE TO G_ADMIN_SIG;

/

/*
TA_GEOTECH_RELATION_SITE_ETUDE : Création de la table TA_GEOTECH_RELATION_SITE_ETUDE contenant les identifiant des tables TA_GEOTECH_RELATION_SITE_ETUDE et TA_GEOTECH_FAMILLE, permettant de joindre chaque libellé long à sa famille de libellés.
*/

-- 1. La table
CREATE TABLE G_GEO.TA_GEOTECH_RELATION_SITE_ETUDE (
	"OBJECTID" NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
	"FID_SITE" NUMBER(38,0) NOT NULL,
	"FID_ETUDE" NUMBER(38,0) NOT NULL
 );

-- 2. Les commentaires
COMMENT ON TABLE G_GEO.TA_GEOTECH_RELATION_SITE_ETUDE IS 'Table pivot permettant d''associer : un site à une ou plusieurs études - une étude à un ou plusieurs bureaux d''étude.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_RELATION_SITE_ETUDE.OBJECTID IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_RELATION_SITE_ETUDE.FID_SITE IS 'Clé étrangère vers la table TA_GEOTECH_SITE permettant d''associer un site à une ou plusieurs études et un ou plusieurs bureau d''étude.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_RELATION_SITE_ETUDE.FID_ETUDE IS 'Clé étrangère vers la table TA_GEOTECH_ETUDE, permettant d''associer une ou plusieurs études à un site et un ou plusieurs bureaux d''étude.';

-- 3. Les contraintes
-- Contrainte de clé primaire
ALTER TABLE G_GEO.TA_GEOTECH_RELATION_SITE_ETUDE
ADD CONSTRAINT TA_GEOTECH_RELATION_SITE_ETUDE_PK
PRIMARY KEY("OBJECTID")
USING INDEX TABLESPACE G_ADT_INDX;

-- Contraintes de clés étrangères
ALTER TABLE G_GEO.TA_GEOTECH_RELATION_SITE_ETUDE
ADD CONSTRAINT TA_GEOTECH_RELATION_SITE_ETUDE_FID_ETUDE_FK
FOREIGN KEY("FID_ETUDE")
REFERENCES G_GEO.TA_GEOTECH_ETUDE("OBJECTID");

ALTER TABLE G_GEO.TA_GEOTECH_RELATION_SITE_ETUDE
ADD CONSTRAINT TA_GEOTECH_RELATION_SITE_ETUDE_FID_SITE_FK
FOREIGN KEY("FID_SITE")
REFERENCES G_GEO.TA_GEOTECH_SITE("OBJECTID");

-- 4. Les index
CREATE INDEX TA_GEOTECH_RELATION_SITE_ETUDE_FID_SITE_IDX ON G_GEO.TA_GEOTECH_RELATION_SITE_ETUDE("FID_SITE")
    TABLESPACE G_ADT_INDX;
    
CREATE INDEX TA_GEOTECH_RELATION_SITE_ETUDE_FID_ETUDE_IDX ON G_GEO.TA_GEOTECH_RELATION_SITE_ETUDE("FID_ETUDE")
    TABLESPACE G_ADT_INDX;

-- 5. Les droits de lecture, écriture, suppression
GRANT SELECT ON G_GEO.TA_GEOTECH_RELATION_SITE_ETUDE TO G_ADMIN_SIG;

/

/*
SEQ_TA_GEOTECH_BUREAU_ETUDE_OBJECTID : création de la séquence d'auto-incrémentation de la clé primaire de la table TA_GEOTECH_BUREAU_ETUDE
*/

CREATE SEQUENCE SEQ_TA_GEOTECH_BUREAU_ETUDE_OBJECTID START WITH 1 INCREMENT BY 1;

/

/*
TA_GEOTECH_BUREAU_ETUDE : Création de la table TA_GEOTECH_BUREAU_ETUDE permettant de lier chaque étude à un ou plusieurs bureaux d''étude.
*/

-- 1. La table
CREATE TABLE G_GEO.TA_GEOTECH_BUREAU_ETUDE (
	"OBJECTID" NUMBER(38,0) DEFAULT G_GEO.SEQ_TA_GEOTECH_BUREAU_ETUDE_OBJECTID.NEXTVAL NOT NULL,
	"NOM" VARCHAR2(300),
	"FID_ETUDE" NUMBER(38,0)
 );

-- 2. Les commentaires
COMMENT ON TABLE G_GEO.TA_GEOTECH_BUREAU_ETUDE IS 'Table permettant de lier chaque étude à un ou plusieurs bureaux d''étude.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_BUREAU_ETUDE.OBJECTID IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_BUREAU_ETUDE.NOM IS 'Nom du bureau d''étude.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_BUREAU_ETUDE.FID_ETUDE IS 'Clé étrangère vers la table TA_GEOTECH_ETUDE permettant d''associer une étude à un ou plusieurs bureaux d''étude.';

-- 3. Les contraintes
-- Contrainte de clé primaire
ALTER TABLE G_GEO.TA_GEOTECH_BUREAU_ETUDE
ADD CONSTRAINT TA_GEOTECH_BUREAU_ETUDE_PK
PRIMARY KEY("OBJECTID")
USING INDEX TABLESPACE G_ADT_INDX;

-- Contrainte de clé étrangère
ALTER TABLE G_GEO.TA_GEOTECH_BUREAU_ETUDE
ADD CONSTRAINT TA_GEOTECH_BUREAU_ETUDE_FID_ETUDE_FK
FOREIGN KEY("FID_ETUDE")
REFERENCES G_GEO.TA_GEOTECH_ETUDE("OBJECTID");

-- 4. Les index
CREATE INDEX TA_GEOTECH_BUREAU_ETUDE_NOM_IDX ON G_GEO.TA_GEOTECH_BUREAU_ETUDE("NOM")
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_GEOTECH_BUREAU_ETUDE_FID_ETUDE_IDX ON G_GEO.TA_GEOTECH_BUREAU_ETUDE("FID_ETUDE")
    TABLESPACE G_ADT_INDX;

-- 5. Les droits de lecture, écriture, suppression
GRANT SELECT ON G_GEO.TA_GEOTECH_BUREAU_ETUDE TO G_ADMIN_SIG;

/

/*
TA_GEOTECH_REPERTOIRE : Création de la table TA_GEOTECH_REPERTOIRE qui présente les chemins d''accès aux répertoires contenant les fichiers des études géotechniques.
*/

-- 1. La table
CREATE TABLE G_GEO.TA_GEOTECH_REPERTOIRE (
	"OBJECTID" NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"REPERTOIRE" VARCHAR2(4000),
    "PROTOCOLE" NUMBER(38,0)
 );

-- 2. Les commentaires
COMMENT ON TABLE G_GEO.TA_GEOTECH_REPERTOIRE IS 'Table qui présente les chemins d''accès aux répertoires contenant les fichiers des études géotechniques.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_REPERTOIRE.OBJECTID IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_REPERTOIRE.REPERTOIRE IS 'Chemin des répertoires contenant les fichiers liés aux études géotechniques.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_REPERTOIRE.PROTOCOLE IS 'Type de protocole du chemin.';

-- 3. Les contraintes
-- Contrainte de clé primaire
ALTER TABLE G_GEO.TA_GEOTECH_REPERTOIRE
ADD CONSTRAINT TA_GEOTECH_REPERTOIRE_PK
PRIMARY KEY("OBJECTID")
USING INDEX TABLESPACE G_ADT_INDX;

-- 4. Les index
CREATE INDEX TA_GEOTECH_REPERTOIRE_PROTOCOLE_REPERTOIRE_IDX ON G_GEO.TA_GEOTECH_REPERTOIRE("PROTOCOLE", "REPERTOIRE")
    TABLESPACE G_ADT_INDX;

-- 5. Les droits de lecture, écriture, suppression
GRANT SELECT ON G_GEO.TA_GEOTECH_REPERTOIRE TO G_ADMIN_SIG;

/

/*
TA_GEOTECH_FICHIER : Création de la table TA_GEOTECH_FICHIER regroupant tous les sites géotechniques.
*/

-- 1. La table
CREATE TABLE G_GEO.TA_GEOTECH_FICHIER (
	"OBJECTID" NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"FICHIER" VARCHAR2(4000),
    "FID_ETUDE" NUMBER(38,0)
 );

-- 2. Les commentaires
COMMENT ON TABLE G_GEO.TA_GEOTECH_FICHIER IS 'Table permettant de lister tous les fichiers correspondant à une étude (dwg, pdf, etc).';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_FICHIER.OBJECTID IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_FICHIER.FICHIER IS 'Nom du fichier.';
COMMENT ON COLUMN G_GEO.TA_GEOTECH_FICHIER.FID_ETUDE IS 'Clé étrangère vers la table TA_GEOTECH_ETUDE permettant d''associer une étude à un ou plusieurs fichiers.';

-- 3. Les contraintes
-- Contrainte de clé primaire
ALTER TABLE G_GEO.TA_GEOTECH_FICHIER
ADD CONSTRAINT TA_GEOTECH_FICHIER_PK
PRIMARY KEY("OBJECTID")
USING INDEX TABLESPACE G_ADT_INDX;

-- 4. Les index
CREATE INDEX TA_GEOTECH_FICHIER_FID_ETUDE_FICHIER_IDX ON G_GEO.TA_GEOTECH_FICHIER("FID_ETUDE", "FICHIER")
    TABLESPACE G_ADT_INDX;

-- 5. Les droits de lecture, écriture, suppression
GRANT SELECT ON G_GEO.TA_GEOTECH_FICHIER TO G_ADMIN_SIG;

/

/*
Affectation des droits de lecture, édition et suppression des tables et les séquences du schéma GestionGeo.
*/
-- G_GEOTECH_R :
-- Séquences
GRANT SELECT ON G_GEO.SEQ_TA_GEOTECH_FAMILLE_OBJECTID TO G_GEO_R;
GRANT SELECT ON G_GEO.SEQ_TA_GEOTECH_LIBELLE_OBJECTID TO G_GEO_R;
GRANT SELECT ON G_GEO.SEQ_TA_GEOTECH_ETUDE_OBJECTID TO G_GEO_R;
GRANT SELECT ON G_GEO.SEQ_TA_GEOTECH_BUREAU_ETUDE_OBJECTID TO G_GEO_R;
GRANT SELECT ON G_GEO.SEQ_TA_GEOTECH_SITE_OBJECTID TO G_GEO_R;

-- Tables
GRANT SELECT ON G_GEO.TA_GEOTECH_FAMILLE TO G_GEO_R;
GRANT SELECT ON G_GEO.TA_GEOTECH_LIBELLE TO G_GEO_R;
GRANT SELECT ON G_GEO.TA_GEOTECH_ETUDE TO G_GEO_R;
GRANT SELECT ON G_GEO.TA_GEOTECH_BUREAU_ETUDE TO G_GEO_R;
GRANT SELECT ON G_GEO.TA_GEOTECH_RELATION_SITE_ETUDE TO G_GEO_R;
GRANT SELECT ON G_GEO.TA_GEOTECH_REPERTOIRE TO G_GEO_R;
GRANT SELECT ON G_GEO.TA_GEOTECH_FICHIER TO G_GEO_R;
GRANT SELECT ON G_GEO.TA_GEOTECH_SITE TO G_GEO_R;

-- G_GEOTECH_RW :
-- Séquences
GRANT SELECT ON G_GEO.SEQ_TA_GEOTECH_FAMILLE_OBJECTID TO G_GEO_RW;
GRANT SELECT ON G_GEO.SEQ_TA_GEOTECH_LIBELLE_OBJECTID TO G_GEO_RW;
GRANT SELECT ON G_GEO.SEQ_TA_GEOTECH_ETUDE_OBJECTID TO G_GEO_RW;
GRANT SELECT ON G_GEO.SEQ_TA_GEOTECH_BUREAU_ETUDE_OBJECTID TO G_GEO_RW;
GRANT SELECT ON G_GEO.SEQ_TA_GEOTECH_SITE_OBJECTID TO G_GEO_RW;

-- Tables
GRANT SELECT, INSERT, UPDATE, DELETE ON G_GEO.TA_GEOTECH_FAMILLE TO G_GEO_RW;
GRANT SELECT, INSERT, UPDATE, DELETE ON G_GEO.TA_GEOTECH_LIBELLE TO G_GEO_RW;
GRANT SELECT, INSERT, UPDATE, DELETE ON G_GEO.TA_GEOTECH_ETUDE TO G_GEO_RW;
GRANT SELECT, INSERT, UPDATE, DELETE ON G_GEO.TA_GEOTECH_BUREAU_ETUDE TO G_GEO_RW;
GRANT SELECT, INSERT, UPDATE, DELETE ON G_GEO.TA_GEOTECH_RELATION_SITE_ETUDE TO G_GEO_RW;
GRANT SELECT, INSERT, UPDATE, DELETE ON G_GEO.TA_GEOTECH_REPERTOIRE TO G_GEO_RW;
GRANT SELECT, INSERT, UPDATE, DELETE ON G_GEO.TA_GEOTECH_FICHIER TO G_GEO_RW;
GRANT UPDATE(GEOM) ON G_GEO.TA_GEOTECH_SITE TO G_GEO_RW;
GRANT SELECT, INSERT, UPDATE, DELETE ON G_GEO.TA_GEOTECH_SITE TO G_GEO_RW;

/

